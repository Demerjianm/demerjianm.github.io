{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","_layouts_index__WEBPACK_IMPORTED_MODULE_3__","_utils_helpers__WEBPACK_IMPORTED_MODULE_4__","Service","props","console","log","data","_props$pageContext","pageContext","previous","next","_data$markdownRemark$","markdownRemark","frontmatter","title","date","_data$markdownRemark","html","timeToRead","a","createElement","bodyClass","className","style","display","formatPostDate","formatReadingTime","dangerouslySetInnerHTML","__html","flexWrap","justifyContent","listStyle","padding","to","node","id","rel"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAyEaI,EAAK,aAcHQ,UAjFC,SAAAC,GACdC,QAAQC,IAAIF,GADW,IAEfG,EAASH,EAATG,KAFeC,EAGIJ,EAAMK,YAAzBC,EAHeF,EAGfE,SAAUC,EAHKH,EAGLG,KAClBN,QAAQC,IAAII,EAAUC,GAJC,IAAAC,EAKCL,EAAKM,eAAeC,YAApCC,EALeH,EAKfG,MAAOC,EALQJ,EAKRI,KALQC,EAMMV,EAAKM,eAA1BK,EANeD,EAMfC,KAAMC,EANSF,EAMTE,WACd,OACEtB,EAAAuB,EAAAC,cAACpB,EAAA,EAAD,CAAQqB,UAAU,gBAChBzB,EAAAuB,EAAAC,cAACrB,EAAA,EAAD,CAAKe,MAAOA,IACZlB,EAAAuB,EAAAC,cAAA,OAAKE,UAAU,oCACb1B,EAAAuB,EAAAC,cAAA,OAAKE,UAAU,2BACb1B,EAAAuB,EAAAC,cAAA,OAAKE,UAAU,6BACb1B,EAAAuB,EAAAC,cAAA,OAAKE,UAAU,mBACb1B,EAAAuB,EAAAC,cAAA,OAAKE,UAAU,0BACb1B,EAAAuB,EAAAC,cAAA,MAAIE,UAAU,SAASR,GACvBlB,EAAAuB,EAAAC,cAAA,KACEG,MAAO,CAELC,QAAS,UAKVC,YAAeV,EAAM,MARxB,MASSW,YAAkBR,IAG3BtB,EAAAuB,EAAAC,cAAA,OACEE,UAAU,UACVK,wBAAyB,CAAEC,OAAQX,MAGvCrB,EAAAuB,EAAAC,cAAA,WACExB,EAAAuB,EAAAC,cAAA,MACEG,MAAO,CACLC,QAAS,OACTK,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGXpC,EAAAuB,EAAAC,cAAA,UACGX,GACCb,EAAAuB,EAAAC,cAACtB,EAAA,EAAD,CAAMmC,GAAE,QAAUxB,EAASyB,KAAKC,GAAMC,IAAI,QAA1C,KACK3B,EAASyB,KAAKrB,YAAYC,QAInClB,EAAAuB,EAAAC,cAAA,UACGV,GACCd,EAAAuB,EAAAC,cAACtB,EAAA,EAAD,CAAMmC,GAAE,QAAUvB,EAAKwB,KAAKC,GAAMC,IAAI,QACnC1B,EAAKwB,KAAKrB,YAAYC,MADzB","file":"component---src-templates-blog-post-js-fafbceb7bbb39c72f335.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport SEO from '../components/SEO'\nimport Layout from '../layouts/index'\nimport { formatPostDate, formatReadingTime } from '../utils/helpers'\n\nconst Service = props => {\n  console.log(props)\n  const { data } = props\n  const { previous, next } = props.pageContext\n  console.log(previous, next)\n  const { title, date } = data.markdownRemark.frontmatter\n  const { html, timeToRead } = data.markdownRemark\n  return (\n    <Layout bodyClass=\"page-service\">\n      <SEO title={title} />\n      <div className=\"strip strip-white strip-diagonal\">\n        <div className=\"container pt-4 pt-md-10\">\n          <div className=\"row justify-content-start\">\n            <div className=\"col-12 col-md-6\">\n              <div className=\"service service-single\">\n                <h1 className=\"title\">{title}</h1>\n                <p\n                  style={{\n                    // ...scale(-1 / 5),\n                    display: 'block'\n                    // marginBottom: rhythm(1),\n                    // marginTop: rhythm(-4 / 5)\n                  }}\n                >\n                  {formatPostDate(date, 'en')}\n                  {` • ${formatReadingTime(timeToRead)}`}\n                </p>\n\n                <div\n                  className=\"content\"\n                  dangerouslySetInnerHTML={{ __html: html }}\n                />\n              </div>\n              <nav>\n                <ul\n                  style={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    justifyContent: 'space-between',\n                    listStyle: 'none',\n                    padding: 0\n                  }}\n                >\n                  <li>\n                    {previous && (\n                      <Link to={`blog/${previous.node.id}`} rel=\"prev\">\n                        ← {previous.node.frontmatter.title}\n                      </Link>\n                    )}\n                  </li>\n                  <li>\n                    {next && (\n                      <Link to={`blog/${next.node.id}`} rel=\"next\">\n                        {next.node.frontmatter.title} →\n                      </Link>\n                    )}\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n      }\n      html\n    }\n  }\n`\n\nexport default Service\n"],"sourceRoot":""}